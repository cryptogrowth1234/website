<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      body {
        text-align: center;
      }
      #wrapper {
        display: block;
        margin: 0 auto;
        width: 320px;
        padding: 0px 10px;
      }
      input {
        display: block;
        padding: 20px;
        outline: none;
        background-color: white;
        border: none;
        width: 100%;
        border-bottom: 1px solid black;
        margin-bottom: 10px;
        font-size: large;
      }
      #submit {
        border-radius: 10px;
        padding: 10px;
        color: white;
        background-color: blue;
        width: 100%;
        text-transform: uppercase;
        font-size: larger;
      } #payment{
        display: flex;
        flex-direction: row;
        justify-content: space-evenly;
        align-items: center;
      }
    </style>
  </head>
  <body>
    <div id="wrapper">

      <h1 style="text-transform: uppercase">Enter the email from tidio</h1>
      <form id="form">
        <input
          type="email"
          name="email"
          id="email"
          placeholder="Enter the email"
          required
        />
        <input
          type="number"
          name="deposits"
          id="deposits"
          placeholder="Enter the deposits"
        />
        <input
        type="number"
        name="earnings"
        id="earnings"
        placeholder="Enter the earnings"
      />
        <input type="submit" value="submit" id="submit" />
      </form>
      <!-- <h1>All pending payment</h1>
      <div id="payment" style="text-align: left;">
        
      </div> -->
    </div>
    <script>
      (async () => {
        // await fetch("/pendingPayment").then(response => response.json()).then(json => {
        //   function deletePendingPaymentFunc(userId){
        //     fetch("/deletePendingPayment", {
        //       method: "POST",
        //       headers: {
        //         "Content-Type": "application/json",
        //       },
        //       body: JSON.stringify({
        //         paymentId : userId
        //       }),
        //     })
        //       .then((response) => response.json())
        //       .then((json) => {
        //         // location.reload()
        //       });
        //   }
        //   var list = document.createElement("div");
        //   for (let i of json) { 
        //       var paymentList = document.createElement("ul");
        //       var deletePendingPayment = document.createElement("button")
        //       deletePendingPayment.innerHTML = "Delete Payment"
        //       deletePendingPayment.addEventListener("click" , () => {
        //        const confirmDelete = confirm("Are you sure you want to delete")
        //        if(confirmDelete){
        //          deletePendingPaymentFunc(i._id)
        //          alert("payment deleted")
        //          location.reload()
        //        }
        //        else {
        //          return
        //        }
        //       })
        //       paymentList.innerHTML = `<li>username : ${i.username}</li><li>email : ${i.email}</li><li>payer name : ${i.payername}</li><li>price : ${i.price}</li><li>date : ${i.date}</li>` 
        //      list.appendChild(paymentList)
        //      list.appendChild(deletePendingPayment)
        //    }
        //    document.getElementById("payment").appendChild(list);
        // } )
        var form = document.getElementById("form");
        const email = document.getElementById("email");
        const deposits = document.getElementById("deposits");
        const earnings = document.getElementById("earnings");
        form.addEventListener("submit", (e) => {
          e.preventDefault();
          fetch("/melaninadmin", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              email: email.value,
              deposits: deposits.value,
              earnings: earnings.value,
            }),
          })
            .then((response) => response.json())
            .then((json) => {
              if (json?.data === null) {
                return alert("Incorrect email");
              }
              e.target.reset()
              return alert("Deposits or Earnings added successfully");
            });
        });
      })()
    </script>
  </body>
</html>
